# Copyright 2019 BlueCat Networks. All rights reserved.
# Filter
filter f_load_configuration_failure{
	match("(re)*loading configuration.*(failed)*" value("MESSAGE"));
	and
    not match("(re)*loading configuration.*success" value("MESSAGE"));
};

filter f_load_configuration_success{
    match("running" value("MESSAGE"));
	and
	not match("running." value("MESSAGE"));
};

filter f_load_zone_failure{
    match("zone.+/IN/.+loading from master file.+failed.+" value("MESSAGE"));
    or
    match("zone.+/IN/.+not loaded due to errors" value("MESSAGE"));
};

filter f_load_zone_success{
    match("zone.+/IN/.+loaded serial.+" value("MESSAGE"));
};

filter f_tsig_bad_time{
    match("client.+view.+request has invalid signature.+tsig verify failure.+\(BADTIME\)" value("MESSAGE"));
    or
    match("zone.+/IN/.+refresh: failure trying master.+clocks are unsynchronized" value("MESSAGE"));
};

filter f_tsig_not_bad_time{
    match("client.+key.+view.+received notify for zone.+TSIG" value("MESSAGE"));
    or
    match("transfer of.+from.+connected.+" value("MESSAGE"));
    or
    match("client.+key.+view.+transfer of.+started: TSIG.+" value("MESSAGE"));
};

filter f_network_interface_down{
    match("Deleting interface.+interface stats.+" value("MESSAGE"));
};

filter f_network_interface_up{
    match("Listen normally on .+" value("MESSAGE"));
};

filter f_read_only_failure{
    match("I/O error occurred while writing; .+(Read-only file system|Connection refused)" value("MESSAGE"));
};

filter f_read_only_success{
    match("syslog-ng starting up.+" value("MESSAGE"));
};

filter f_read_only_force_success{
    match("Starting network Service" value("MESSAGE"));
};

filter f_zone_transfer_failure{
    match("zone.+/IN/.+refresh: failure trying master.+" value("MESSAGE"));
};

filter f_zone_transfer_success{
    match("transfer of.+/IN/.+Transfer status: success" value("MESSAGE"));
};

filter f_max_connection_limitation{
    match("no more TCP clients" value("MESSAGE"));
};


# Rewrite
rewrite r_load_configuration_failure_filter{
    set("LoadConfigurationFailed_set", value("FILTER_NAME"));
};

rewrite r_load_configuration_success_filter{
    set("LoadConfigurationFailed_clear", value("FILTER_NAME"));
};

rewrite r_load_zone_failure_filter{
    set("LoadZoneFailed_set", value("FILTER_NAME"));
};

rewrite r_load_zone_success_filter{
    set("LoadZoneFailed_clear", value("FILTER_NAME"));
};

rewrite r_tsig_bad_time_filter{
    set("TsigBadTime_set", value("FILTER_NAME"));
};

rewrite r_tsig_not_bad_time_filter{
    set("TsigBadTime_clear", value("FILTER_NAME"));
};

rewrite r_network_interface_down_filter{
    set("NetworkInterfaceDown_set", value("FILTER_NAME"));
};

rewrite r_network_interface_up_filter{
    set("NetworkInterfaceDown_clear", value("FILTER_NAME"));
};

rewrite r_read_only_failure_filter{
    set("StorageReadOnly_set", value("FILTER_NAME"));
};

rewrite r_read_only_success_filter{
    set("StorageReadOnly_clear", value("FILTER_NAME"));
};

rewrite r_read_only_force_success_filter{
    set("StorageReadOnly_forceclear", value("FILTER_NAME"));
};

rewrite r_zone_transfer_failure_filter{
    set("ZoneTransferFailed_set", value("FILTER_NAME"));
};

rewrite r_zone_transfer_success_filter{
    set("ZoneTransferFailed_clear", value("FILTER_NAME"));
};

rewrite r_max_connection_limitation_filter{
    set("TcpConnectionLimitExceeded_set", value("FILTER_NAME"));
};

# Destinations
destination d_fw_log{
    file("/var/log/mon-app/fw-log/$HOST/$YEAR$MONTH$DAY.log" create_dirs(yes));
};

destination d_filter_log{
    file("/var/log/mon-app/filter-log/$HOST/$YEAR$MONTH$DAY.log" create_dirs(yes));
    python(
        class("monitoring.Monitoring")
        on-error("fallback-to-string")
        value-pairs(scope(everything))
    );
};

# Log paths
log {
    source(s_udp);
    destination(d_fw_log);
    log {
        filter(f_load_configuration_failure);
		rewrite(r_load_configuration_failure_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_load_configuration_success);
		rewrite(r_load_configuration_success_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_load_zone_failure);
		rewrite(r_load_zone_failure_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_load_zone_success);
		rewrite(r_load_zone_success_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_tsig_bad_time);
		rewrite(r_tsig_bad_time_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_tsig_not_bad_time);
		rewrite(r_tsig_not_bad_time_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_network_interface_down);
        rewrite(r_network_interface_down_filter);
		destination(d_filter_log);
	};
	log {
        filter(f_network_interface_up);
        rewrite(r_network_interface_up_filter);
		destination(d_filter_log);
	};
    log {
        filter(f_read_only_failure);
		rewrite(r_read_only_failure_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_read_only_success);
		rewrite(r_read_only_success_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_read_only_force_success);
		rewrite(r_read_only_force_success_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_zone_transfer_failure);
		rewrite(r_zone_transfer_failure_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_zone_transfer_success);
		rewrite(r_zone_transfer_success_filter);
        destination(d_filter_log);
    };
    log {
        filter(f_max_connection_limitation);
		rewrite(r_max_connection_limitation_filter);
        destination(d_filter_log);
    };
};
